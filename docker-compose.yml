services:
  db:
    image: postgres:15
    container_name: leaveit-db
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  app:
    build: .
    container_name: leaveit-app
    restart: always
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      
      DOMAIN_NAME: ${DOMAIN_NAME}

    command: ["dotnet", "leave-it-small.dll"]
    labels:
      - "traefik.enable=true" 
      # Roteamento para a API (ex: /api/shorten, /api/links)
      - "traefik.http.routers.leaveit-api.rule=Host(`${DOMAIN_NAME}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.leaveit-api.entrypoints=web"
      - "traefik.http.routers.leaveit-api.priority=30"

      - "traefik.http.routers.leaveit-redirect.rule=Host(`${DOMAIN_NAME}`) && PathPrefix(`/`)"
      - "traefik.http.routers.leaveit-redirect.entrypoints=web"
      - "traefik.http.routers.leaveit-redirect.priority=20" # Prioridade para evitar conflitos com a rota da API
      - "traefik.http.services.leaveit-service.loadbalancer.server.port=5000" 

  frontend:
    build:
      context: ../lim-front
      dockerfile: Dockerfile
    container_name: leaveit-frontend
    restart: always
    depends_on:
      - app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.leaveit-frontend.rule=Host(`${DOMAIN_NAME_FRONT}`)"
      - "traefik.http.routers.leaveit-frontend.entrypoints=web"
      - "traefik.http.routers.leaveit-frontend.priority=10" 
      - "traefik.http.services.leaveit-frontend.loadbalancer.server.port=80"

  traefik: 
    image: traefik:v3.5
    command: 
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"

      - "--entrypoints.web.address=:80"
      # - "--entrypoints.websecure.address=:443"

      # - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      # - "--entrypoints.web.http.redirections.entrypoint.scheme=https"

      # - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      # - "--certificatesresolvers.letsencrypt.acme.email=${LE_EMAIL}"
      # - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      # - "443:443"
      # - "8080:8080" # Porta para o dashboard da API
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik-certs:/letsencrypt
    # labels:
    #     # Roteamento para o dashboard do Traefik
    #   - "traefik.enable=true"
    #   - "traefik.http.routers.dashboard.rule=Host(`traefik.dominio.com`)"
    #   - "traefik.http.routers.dashboard.service=api@internal"
    #   - "traefik.http.routers.dashboard.entrypoints=websecure"
    #   - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
    #   # Autenticação básica para o dashboard
    #   - "traefik.http.middlewares.dashboard-auth.basicauth.users=${TRAEFIK_DASHBOARD_AUTH}"
    #   - "traefik.http.routers.dashboard.middlewares=dashboard-auth" 

volumes:
  postgres_data:
  traefik-certs: